language: c
jobs:
  include:
    - name: Build on linux-default
      os: linux
      env: GENERATOR="Unix Makefiles"
    - name: Build on osx-default
      os: osx
      env: GENERATOR="Unix Makefiles"
    - name: Build on windows-vs15
      os: windows
      env: GENERATOR="Visual Studio 15 2017 Win64"
    - name: Build on windows-ninja
      os: windows
      env: GENERATOR=Ninja
      before_install: choco install ninja --no-progress -y
    # - name: Install on linux-default
    #   os: linux
    #   sudo: required
    #   before_script: test -e /usr/bin/cmake || sudo ln -s $(which cmake) /usr/bin/cmake
    #   script: curl -fsSL https://git.io/JerYI | GITHUB_USER=limix GITHUB_PROJECT=hcephes DO_CMD=sudo bash
    # - name: Install on osx-default
    #   os: osx
    #   script: curl -fsSL https://git.io/JerYI | GITHUB_USER=limix GITHUB_PROJECT=hcephes DO_CMD=sudo bash
    # - name: Install on windows
    #   os: windows
    #   script: curl -fsSL https://git.io/JerYI | GITHUB_USER=limix GITHUB_PROJECT=hcephes bash
script:
  - mkdir prefix
  - mkdir build
  - cd build
  - cmake -G"$GENERATOR" -DCMAKE_BUILD_TYPE=Release -DBUILD_SHARED_LIBS=ON -DCMAKE_INSTALL_PREFIX=$TRAVIS_BUILD_DIR/prefix
    ..
  - cmake --build . --config Release
  - ctest --output-on-failure -C Release
  - cmake --build . --config Release --target install
  - test -e $TRAVIS_BUILD_DIR/prefix/include/hcephes.h
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/hcephes/hcephes-config.cmake
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/hcephes/hcephes-targets-release.cmake
  - test -e $TRAVIS_BUILD_DIR/prefix/lib/cmake/hcephes/hcephes-targets.cmake
  - if [ "$TRAVIS_OS_NAME" = "osx" ]; then otool -l $TRAVIS_BUILD_DIR/prefix/lib/libhcephes.dylib
    | grep -q LC_RPATH; fi
  - if [ "$TRAVIS_OS_NAME" = "linux" ]; then test -e $TRAVIS_BUILD_DIR/prefix/lib/libhcephes.so;
    fi
  - cd $TRAVIS_BUILD_DIR
  - git clean -xdf
notifications:
  email:
    recipients:
      - danilo.horta@pm.me
    on_success: never
    on_failure: always

